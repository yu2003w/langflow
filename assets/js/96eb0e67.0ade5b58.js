"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[6419],{33716:(e,t,l)=>{l.r(t),l.d(t,{contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>r});const n=JSON.parse('{"type":"api","id":"read-flows","title":"Read Flows","description":"","slug":"/read-flows","frontMatter":{},"api":{"tags":["Flows"],"description":"Retrieve a list of flows with pagination support.\\n\\nArgs:\\n    current_user (User): The current authenticated user.\\n    session (Session): The database session.\\n    settings_service (SettingsService): The settings service.\\n    components_only (bool, optional): Whether to return only components. Defaults to False.\\n\\n    get_all (bool, optional): Whether to return all flows without pagination. Defaults to True.\\n    **This field must be True because of backward compatibility with the frontend - Release: 1.0.20**\\n\\n    folder_id (UUID, optional): The folder ID. Defaults to None.\\n    params (Params): Pagination parameters.\\n    remove_example_flows (bool, optional): Whether to remove example flows. Defaults to False.\\n    header_flows (bool, optional): Whether to return only specific headers of the flows. Defaults to False.\\n\\nReturns:\\n    list[FlowRead] | Page[FlowRead] | list[FlowHeader]\\n    A list of flows or a paginated response containing the list of flows or a list of flow headers.","operationId":"read_flows_api_v1_flows__get","security":[{"OAuth2PasswordBearer":[]},{"API key query":[]},{"API key header":[]}],"parameters":[{"name":"remove_example_flows","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Remove Example Flows"}},{"name":"components_only","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Components Only"}},{"name":"get_all","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Get All"}},{"name":"folder_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string","format":"uuid"}],"title":"Folder Id","nullable":true}},{"name":"header_flows","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Header Flows"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"default":50,"title":"Size"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"anyOf":[{"type":"array","items":{"properties":{"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"}],"title":"Description","nullable":true},"icon":{"anyOf":[{"type":"string"}],"title":"Icon","nullable":true},"icon_bg_color":{"anyOf":[{"type":"string"}],"title":"Icon Bg Color","nullable":true},"gradient":{"anyOf":[{"type":"string"}],"title":"Gradient","nullable":true},"data":{"anyOf":[{"type":"object"}],"title":"Data","nullable":true},"is_component":{"anyOf":[{"type":"boolean"}],"title":"Is Component","default":false,"nullable":true},"updated_at":{"anyOf":[{"type":"string","format":"date-time"}],"title":"Updated At","nullable":true},"webhook":{"anyOf":[{"type":"boolean"}],"title":"Webhook","description":"Can be used on the webhook endpoint","default":false,"nullable":true},"endpoint_name":{"anyOf":[{"type":"string"}],"title":"Endpoint Name","nullable":true},"tags":{"anyOf":[{"items":{"type":"string"},"type":"array"}],"title":"Tags","nullable":true},"locked":{"anyOf":[{"type":"boolean"}],"title":"Locked","default":false,"nullable":true},"id":{"type":"string","format":"uuid","title":"Id"},"user_id":{"anyOf":[{"type":"string","format":"uuid"}],"title":"User Id","nullable":true},"folder_id":{"anyOf":[{"type":"string","format":"uuid"}],"title":"Folder Id","nullable":true}},"type":"object","required":["name","id","user_id","folder_id"],"title":"FlowRead"}},{"properties":{"items":{"items":{"properties":{"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"}],"title":"Description","nullable":true},"icon":{"anyOf":[{"type":"string"}],"title":"Icon","nullable":true},"icon_bg_color":{"anyOf":[{"type":"string"}],"title":"Icon Bg Color","nullable":true},"gradient":{"anyOf":[{"type":"string"}],"title":"Gradient","nullable":true},"data":{"anyOf":[{"type":"object"}],"title":"Data","nullable":true},"is_component":{"anyOf":[{"type":"boolean"}],"title":"Is Component","default":false,"nullable":true},"updated_at":{"anyOf":[{"type":"string","format":"date-time"}],"title":"Updated At","nullable":true},"webhook":{"anyOf":[{"type":"boolean"}],"title":"Webhook","description":"Can be used on the webhook endpoint","default":false,"nullable":true},"endpoint_name":{"anyOf":[{"type":"string"}],"title":"Endpoint Name","nullable":true},"tags":{"anyOf":[{"items":{"type":"string"},"type":"array"}],"title":"Tags","nullable":true},"locked":{"anyOf":[{"type":"boolean"}],"title":"Locked","default":false,"nullable":true},"id":{"type":"string","format":"uuid","title":"Id"},"user_id":{"anyOf":[{"type":"string","format":"uuid"}],"title":"User Id","nullable":true},"folder_id":{"anyOf":[{"type":"string","format":"uuid"}],"title":"Folder Id","nullable":true}},"type":"object","required":["name","id","user_id","folder_id"],"title":"FlowRead"},"type":"array","title":"Items"},"total":{"anyOf":[{"type":"integer","minimum":0}],"title":"Total","nullable":true},"page":{"anyOf":[{"type":"integer","minimum":1}],"title":"Page","nullable":true},"size":{"anyOf":[{"type":"integer","minimum":1}],"title":"Size","nullable":true},"pages":{"anyOf":[{"type":"integer","minimum":0}],"title":"Pages","nullable":true}},"type":"object","required":["items","total","page","size"],"title":"Page[FlowRead]"},{"type":"array","items":{"properties":{"id":{"type":"string","format":"uuid","title":"Id","description":"Unique identifier for the flow"},"name":{"type":"string","title":"Name","description":"The name of the flow"},"folder_id":{"anyOf":[{"type":"string","format":"uuid"}],"title":"Folder Id","description":"The ID of the folder containing the flow. None if not associated with a folder","nullable":true},"is_component":{"anyOf":[{"type":"boolean"}],"title":"Is Component","description":"Flag indicating whether the flow is a component","nullable":true},"endpoint_name":{"anyOf":[{"type":"string"}],"title":"Endpoint Name","description":"The name of the endpoint associated with this flow","nullable":true},"description":{"anyOf":[{"type":"string"}],"title":"Description","description":"A description of the flow","nullable":true},"data":{"anyOf":[{"type":"object"}],"title":"Data","description":"The data of the component, if is_component is True","nullable":true}},"type":"object","required":["id","name"],"title":"FlowHeader","description":"Model representing a header for a flow - Without the data."}}],"title":"Response Read Flows Api V1 Flows  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"properties":{"detail":{"items":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"}}}}},"method":"get","path":"/api/v1/flows/","securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"api/v1/login"}}},"API key query":{"type":"apiKey","in":"query","name":"x-api-key"},"API key header":{"type":"apiKey","in":"header","name":"x-api-key"}},"info":{"title":"Langflow","version":"1.1.1"},"postman":{"name":"Read Flows","description":{"content":"Retrieve a list of flows with pagination support.\\n\\nArgs:\\n    current_user (User): The current authenticated user.\\n    session (Session): The database session.\\n    settings_service (SettingsService): The settings service.\\n    components_only (bool, optional): Whether to return only components. Defaults to False.\\n\\n    get_all (bool, optional): Whether to return all flows without pagination. Defaults to True.\\n    **This field must be True because of backward compatibility with the frontend - Release: 1.0.20**\\n\\n    folder_id (UUID, optional): The folder ID. Defaults to None.\\n    params (Params): Pagination parameters.\\n    remove_example_flows (bool, optional): Whether to remove example flows. Defaults to False.\\n    header_flows (bool, optional): Whether to return only specific headers of the flows. Defaults to False.\\n\\nReturns:\\n    list[FlowRead] | Page[FlowRead] | list[FlowHeader]\\n    A list of flows or a paginated response containing the list of flows or a list of flow headers.","type":"text/plain"},"url":{"path":["api","v1","flows",""],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"remove_example_flows","value":"false"},{"disabled":false,"key":"components_only","value":"false"},{"disabled":false,"key":"get_all","value":"true"},{"disabled":false,"key":"folder_id","value":"<uuid>"},{"disabled":false,"key":"header_flows","value":"false"},{"disabled":false,"key":"page","value":"1"},{"disabled":false,"key":"size","value":"50"}],"variable":[]},"header":[{"key":"Accept","value":"application/json"}],"method":"GET","auth":{"type":"oauth2","oauth2":[{"type":"any","value":"api/v1/login","key":"accessTokenUrl"},{"type":"any","value":"password_credentials","key":"grant_type"}]}}},"source":"@site/openapi.json","sourceDirName":".","permalink":"/api/read-flows","previous":{"title":"Create Flow","permalink":"/api/create-flow"},"next":{"title":"Delete Multiple Flows","permalink":"/api/delete-multiple-flows"}}');var i=l(74848),a=l(28453);const s={},o="Read Flows",r=[];function d(e){const t={h1:"h1",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"read-flows",children:"Read Flows"})}),"\n",(0,i.jsx)(t.p,{children:"Retrieve a list of flows with pagination support."}),"\n",(0,i.jsx)(t.p,{children:"Args:\ncurrent_user (User): The current authenticated user.\nsession (Session): The database session.\nsettings_service (SettingsService): The settings service.\ncomponents_only (bool, optional): Whether to return only components. Defaults to False."}),"\n",(0,i.jsxs)(t.p,{children:["get_all (bool, optional): Whether to return all flows without pagination. Defaults to True.\n",(0,i.jsx)(t.strong,{children:"This field must be True because of backward compatibility with the frontend - Release: 1.0.20"})]}),"\n",(0,i.jsx)(t.p,{children:"folder_id (UUID, optional): The folder ID. Defaults to None.\nparams (Params): Pagination parameters.\nremove_example_flows (bool, optional): Whether to remove example flows. Defaults to False.\nheader_flows (bool, optional): Whether to return only specific headers of the flows. Defaults to False."}),"\n",(0,i.jsx)(t.p,{children:"Returns:\nlist[FlowRead] | Page[FlowRead] | list[FlowHeader]\nA list of flows or a paginated response containing the list of flows or a list of flow headers."}),"\n",(0,i.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsx)("th",{style:{textAlign:"left"},children:"Query Parameters"})})}),(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"remove_example_flows"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Remove Example Flows"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"components_only"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Components Only"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"get_all"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Get All"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"folder_id"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Folder Id"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"header_flows"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Header Flows"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"page"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Page"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Possible values:"})," 1 \u2264 value"]})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"size"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Size"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Possible values:"})," 1 \u2264 value \u2264 100"]})})]})})]})]}),"\n",(0,i.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsx)("th",{style:{textAlign:"left"},children:"Responses"})})}),(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsxs)("div",{style:{display:"flex"},children:[(0,i.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)("code",{children:"200"})}),(0,i.jsx)("div",{children:(0,i.jsx)(t.p,{children:"Successful Response"})})]}),(0,i.jsx)("div",{children:(0,i.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("th",{style:{textAlign:"left"},children:[(0,i.jsx)("span",{children:"Schema "}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,i.jsx)("div",{})]})})}),(0,i.jsx)("tbody",{children:(0,i.jsx)("tr",{children:(0,i.jsx)("td",{children:(0,i.jsx)("span",{style:{opacity:"0.6"},children:" undefined"})})})})]})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsxs)("div",{style:{display:"flex"},children:[(0,i.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)("code",{children:"422"})}),(0,i.jsx)("div",{children:(0,i.jsx)(t.p,{children:"Validation Error"})})]}),(0,i.jsx)("div",{children:(0,i.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("th",{style:{textAlign:"left"},children:[(0,i.jsx)("span",{children:"Schema "}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,i.jsx)("div",{})]})})}),(0,i.jsx)("tbody",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"detail"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" object[]"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,i.jsx)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"loc"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" undefined[]"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"msg"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Message"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"type"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Error Type"})]})})]})})]})})})]})})]})})]})]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,l)=>{l.d(t,{R:()=>s,x:()=>o});var n=l(96540);const i={},a=n.createContext(i);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);